########################################################################
# Installation stuff - create & export config files
#
# The build tree uses the folder manage/CMakeModules directly, but the
# installed OpenCMISS wont necessarily have the manage folder and needs to
# be self-contained

macro(RELATIVIZE VARNAME)
    set(_old_list ${${VARNAME}})
    #message(STATUS "@@@@@@@@@@@@ old list ${_old_list}")
    set(_new_list)
    foreach(path ${_old_list})
        get_filename_component(path_abs "${path}" ABSOLUTE)
        string(REPLACE "${OPENCMISS_INSTALL_ROOT}" "\${_IMPORT_PREFIX}" path_abs "${path_abs}")
        list(APPEND _new_list "${path_abs}")
    endforeach()
    #message(STATUS "@@@@@@@@@@@@ new list ${_new_list}")
    set(${VARNAME} ${_new_list})
endmacro()

function(do_export CFILE VARS)
    message(STATUS "Exporting OpenCMISS build context: ${CFILE}")
    file(WRITE ${CFILE} "#Exported OpenCMISS configuration\r\n")
    file(APPEND ${CFILE} "#DO NOT EDIT THIS FILE. ITS GENERATED BY THE OPENCMISS BUILD ENVIRONMENT\r\n")
    foreach(VARNAME ${VARS})
        if (DEFINED ${VARNAME})
            # Flags need to be in quotes
            if (VARNAME MATCHES "^CMAKE_.*_FLAGS.*")
                file(APPEND ${CFILE} "set(${VARNAME} \"${${VARNAME}}\")\r\n")
            else()
                file(APPEND ${CFILE} "set(${VARNAME} ${${VARNAME}})\r\n")
            endif()
        endif()    
    endforeach()
endfunction()

###########################################################################################
# Create context.cmake in arch-path dir

# Create a copy to not destroy the original (its being used somewhere later maybe)
set(OPENCMISS_PREFIX_PATH_EXPORT ${OPENCMISS_PREFIX_PATH})
RELATIVIZE(OPENCMISS_PREFIX_PATH_EXPORT)
set(OPENCMISS_LIBRARY_PATH_EXPORT ${OPENCMISS_COMPONENTS_INSTALL_PREFIX}/lib ${OPENCMISS_COMPONENTS_INSTALL_PREFIX_MPI}/lib)
RELATIVIZE(OPENCMISS_LIBRARY_PATH_EXPORT)

set(EXPORT_VARS
    OPENCMISS_PREFIX_PATH_EXPORT
    OPENCMISS_LIBRARY_PATH_EXPORT
    MPI
    MPI_HOME
    MPI_VERSION
    OCM_SYSTEM_MPI
    #FORTRAN_MANGLING
)

# Add the build type if on single-config platform
if (DEFINED CMAKE_BUILD_TYPE AND NOT "" STREQUAL CMAKE_BUILD_TYPE)
    set(OPENCMISS_BUILD_TYPE ${CMAKE_BUILD_TYPE})
    list(APPEND EXPORT_VARS OPENCMISS_BUILD_TYPE)
endif()

# Export component versions
foreach(OCM_COMP ${OPENCMISS_COMPONENTS})
    list(APPEND EXPORT_VARS OCM_USE_${OCM_COMP} OCM_SYSTEM_${OCM_COMP})
    # Export the "correct" cased names for components as well (we have solely uppercase names,
    # but some packages have case-sensitive names like LibXml2 :-(
    if (${OCM_COMP}_CASENAME)
        list(APPEND EXPORT_VARS ${OCM_COMP}_CASENAME)
    endif()
    if (${OCM_COMP}_VERSION)
        list(APPEND EXPORT_VARS ${OCM_COMP}_VERSION)
    endif()
endforeach()

set(OPENCMISS_CONTEXT ${CMAKE_CURRENT_BINARY_DIR}/export/context.cmake)
do_export(${OPENCMISS_CONTEXT} "${EXPORT_VARS}")

# Install it
install(
    FILES ${OPENCMISS_CONTEXT}
    DESTINATION ${OPENCMISS_COMPONENTS_INSTALL_PREFIX_MPI}
)
unset(EXPORT_VARS)

###########################################################################################
# Create opencmiss-config.cmake

set(OPENCMISS_MODULE_PATH_EXPORT
    ${OPENCMISS_FINDMODULE_WRAPPER_DIR}
    ${OPENCMISS_INSTALL_ROOT}/cmake/OpenCMISSExtraFindModules
    ${OPENCMISS_INSTALL_ROOT}/cmake)
RELATIVIZE(OPENCMISS_MODULE_PATH_EXPORT)

# There's litte to configure yet, but could become more
configure_file(${OPENCMISS_MANAGE_DIR}/Templates/opencmiss-config.cmake
 ${CMAKE_CURRENT_BINARY_DIR}/export/opencmiss-config.cmake @ONLY
)
# Version file
include(CMakePackageConfigHelpers)
WRITE_BASIC_PACKAGE_VERSION_FILE(
    ${CMAKE_CURRENT_BINARY_DIR}/export/opencmiss-config-version.cmake
    COMPATIBILITY AnyNewerVersion
)
install(
    FILES ${CMAKE_CURRENT_BINARY_DIR}/export/opencmiss-config.cmake
        ${CMAKE_CURRENT_BINARY_DIR}/export/opencmiss-config-version.cmake
    DESTINATION ${OPENCMISS_INSTALL_ROOT}
)

###########################################################################################

# Copy the config files to the non-build-type dependent install location    
#install(
#    FILES ${CMAKE_CURRENT_BINARY_DIR}/export/opencmisstoolchain-config.cmake 
#    DESTINATION ${OPENCMISS_COMPONENTS_INSTALL_PREFIX_MPI_NO_BUILD_TYPE}
#)

# Copy the FindModule files so that the installation folder is self-contained
install(DIRECTORY ${OPENCMISS_MANAGE_DIR}/CMakeModules/
    DESTINATION ${OPENCMISS_INSTALL_ROOT}/cmake/OpenCMISSExtraFindModules
    PATTERN "FindOpenCMISS*.cmake" EXCLUDE) 
install(FILES ${OPENCMISS_MANAGE_DIR}/CMakeScripts/OCArchitecturePath.cmake
    ${OPENCMISS_MANAGE_DIR}/CMakeScripts/OCToolchainCompilers.cmake
    DESTINATION ${OPENCMISS_INSTALL_ROOT}/cmake)