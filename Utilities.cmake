# Generate the wrappers (if not existing)
SET(WRAPPER_DIR ${OPENCMISS_SETUP_DIR}/CMakeFindModuleWrappers)
foreach(PACKAGE_NAME ${PACKAGES_WITH_TARGETS})
    SET(FILE ${WRAPPER_DIR}/Find${PACKAGE_NAME}.cmake)
    #if(NOT EXISTS ${FILE})
        SET(PACKAGE_TARGETS ${${PACKAGE_NAME}_TARGETS})
        configure_file(${WRAPPER_DIR}/FindXXX.in.cmake ${FILE} @ONLY)
    #endif()
endforeach()

# Fortran mangling - only detect if not already set manually.
if (NOT FORTRAN_MANGLING)
    include(FortranCInterface)
    FortranCInterface_VERIFY()
    FortranCInterface_VERIFY(CXX)
    if (FortranCInterface_GLOBAL_SUFFIX STREQUAL _ AND FortranCInterface_GLOBAL_CASE STREQUAL LOWER)
        SET(FORTRAN_MANGLING Add_)
    elseif(FortranCInterface_GLOBAL_SUFFIX STREQUAL "" AND FortranCInterface_GLOBAL_CASE STREQUAL UPPER)
        SET(FORTRAN_MANGLING UpCase)
    endif()
    if (NOT FORTRAN_MANGLING)
        message(FATAL_ERROR "Fortran mangling autodetection: case not implemented yet: Suffix '${FortranCInterface_GLOBAL_SUFFIX}', Case '${FortranCInterface_GLOBAL_CASE}'")
    endif()
endif()

########################################################################
# MPI pre check
#
# This bit makes sure that if no MPI was set in the configuration we infer the detected MPI from the include path.
if(OCM_USE_MPI AND NOT DEFINED MPI)
    # Look for local one if allowed (default)
    if (OCM_SYSTEM_MPI)
        find_package(MPI QUIET)
        #message(STATUS "MPI_C_COMPILER: ${MPI_C_COMPILER}, MPI_CXX_COMPILER: ${MPI_CXX_COMPILER}")
        if (MPI_FOUND)
            SET(MNEMONICS mpich mpich2 openmpi intel)
            # Patterns to match the include path
            SET(PATTERNS ".*mpich([/|-].*|$)" ".*mpich2([/|-].*|$)" ".*openmpi([/|-].*|$)" ".*(intel|impi)[/|-].*")
            foreach(IDX RANGE 3)
                LIST(GET MNEMONICS ${IDX} MNEMONIC)
                LIST(GET PATTERNS ${IDX} PATTERN)
                STRING(TOLOWER "${MPI_C_INCLUDE_PATH}" C_INC_PATH)
                STRING(TOLOWER "${MPI_CXX_INCLUDE_PATH}" CXX_INC_PATH)
                #message(STATUS "Architecture: checking '${MPI_C_INCLUDE_PATH} MATCHES ${PATTERN} OR ${MPI_CXX_INCLUDE_PATH} MATCHES ${PATTERN}'")
                if (C_INC_PATH MATCHES ${PATTERN} OR CXX_INC_PATH MATCHES ${PATTERN})
                    SET(MPI ${MNEMONIC})
                    break()
                endif()
            endforeach()
            if (NOT MPI)
                if (MPI_C_COMPILER)
                    get_filename_component(COMP_NAME ${MPI_C_COMPILER} NAME)
                    STRING(TOLOWER MPI "unknown_${COMP_NAME}")
                else()
                    SET(MPI "unknown-mpi")
                endif()
                message(WARNING "MPI compiler '${MPI_C_COMPILER}' with include path '${MPI_C_INCLUDE_PATH}' not recognized.")
            endif()
        else()
            message(FATAL_ERROR "OCM_USE_MPI flag is ON but neither MPI is set or a system MPI could be found. Please specify the desired MPI directly or install an MPI implementation available on CMake's PATH")
        endif()
    endif()
endif()